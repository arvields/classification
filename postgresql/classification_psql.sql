-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


DROP TABLE IF EXISTS public.classification_result;

CREATE TABLE IF NOT EXISTS public.classification_result
(
    classification_result_id integer NOT NULL,
    sample_no integer NOT NULL,
    ffamily_name character varying(45) COLLATE pg_catalog."default" NOT NULL,
    fgroup_no integer NOT NULL,
    fgenus_name character varying(45) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    PRIMARY KEY (classification_result_id)
);

DROP TABLE IF EXISTS public.fish_group;

CREATE TABLE IF NOT EXISTS public.fish_group
(
    fgroup_no integer NOT NULL,
    very_elongate numeric(5, 2) DEFAULT NULL::numeric,
    elongate numeric(5, 2) DEFAULT NULL::numeric,
    moderate numeric(5, 2) DEFAULT NULL::numeric,
    deep numeric(5, 2) DEFAULT NULL::numeric,
    very_deep numeric(5, 2) DEFAULT NULL::numeric,
    PRIMARY KEY (fgroup_no)
);

DROP TABLE IF EXISTS public."fish_order (meristic character)";

CREATE TABLE IF NOT EXISTS public."fish_order (meristic character)"
(
    forder_name character varying(20) COLLATE pg_catalog."default" NOT NULL,
    dorsal_count integer,
    anal_count integer,
    pectoral_count integer,
    pelvic_count integer,
    caudal_count integer,
    vertebrae_count integer,
    myomeres_count integer,
    fgroup_no integer,
    PRIMARY KEY (forder_name)
);

DROP TABLE IF EXISTS public.fish_ratio;

CREATE TABLE IF NOT EXISTS public.fish_ratio
(
    sample_no integer NOT NULL,
    "BD/BL_ratio" numeric(10, 2) DEFAULT NULL::numeric,
    "PDL/BL_ratio" numeric(10, 2) DEFAULT NULL::numeric,
    "HL/BL_ratio" numeric(10, 2) DEFAULT NULL::numeric,
    "SnL/BL_ratio" numeric(10, 2) DEFAULT NULL::numeric,
    "ED/BL_ratio" numeric(10, 2) DEFAULT NULL::numeric,
    "PAL/BL_ratio" numeric(10, 2) DEFAULT NULL::numeric,
    "VAFL/BL_ratio" numeric(10, 2) DEFAULT NULL::numeric,
    PRIMARY KEY (sample_no)
);

DROP TABLE IF EXISTS public.flexion_stage;

CREATE TABLE IF NOT EXISTS public.flexion_stage
(
    ffamily_name character varying(20) COLLATE pg_catalog."default" NOT NULL,
    fgroup_no integer NOT NULL,
    flexion_stage character varying(20) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    bd_lowrange numeric(10, 2) DEFAULT NULL::numeric,
    bd_highrange numeric(10, 2) DEFAULT NULL::numeric,
    ed_lowrange numeric(10, 2) DEFAULT NULL::numeric,
    ed_highrange numeric(10, 2) DEFAULT NULL::numeric,
    hl_lowrange numeric(10, 2) DEFAULT NULL::numeric,
    hl_highrange numeric(10, 2) DEFAULT NULL::numeric,
    pdl_lowrange numeric(10, 2) DEFAULT NULL::numeric,
    pdl_highrange numeric(10, 2) DEFAULT NULL::numeric,
    snl_lowrange numeric(10, 2) DEFAULT NULL::numeric,
    snl_highrange numeric(10, 2) DEFAULT NULL::numeric,
    pal_lowrange numeric(10, 2) DEFAULT NULL::numeric,
    pal_highrange numeric(10, 2) DEFAULT NULL::numeric,
    vafl_lowrange numeric(10, 2) DEFAULT NULL::numeric,
    vafl_highrange numeric(10, 2) DEFAULT NULL::numeric,
    PRIMARY KEY (ffamily_name)
);

DROP TABLE IF EXISTS public."genus (meristic character)";

CREATE TABLE IF NOT EXISTS public."genus (meristic character)"
(
    fgenus_name character varying(45) COLLATE pg_catalog."default" NOT NULL,
    dorsal_count integer,
    anal_count integer,
    pectoral_count integer,
    pelvic_count integer,
    caudal_count integer,
    vertebrae integer,
    PRIMARY KEY (fgenus_name)
);

DROP TABLE IF EXISTS public.genus_decision;

CREATE TABLE IF NOT EXISTS public.genus_decision
(
    sample_no integer NOT NULL,
    fgenus_name character varying(45) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    bd smallint,
    ed smallint,
    hl smallint,
    pdl smallint,
    snl smallint,
    pal smallint,
    vafl smallint,
    dorsal_count smallint,
    anal_count smallint,
    pectoral_count smallint,
    caudal_count smallint,
    vertebrae_count smallint,
    myomeres_count smallint,
    PRIMARY KEY (sample_no)
);

DROP TABLE IF EXISTS public.group_decision;

CREATE TABLE IF NOT EXISTS public.group_decision
(
    sample_no integer NOT NULL,
    fgroup_no integer NOT NULL,
    very_elongate smallint,
    elongate smallint,
    moderate smallint,
    deep smallint,
    very_deep smallint,
    PRIMARY KEY (sample_no)
);

DROP TABLE IF EXISTS public.morphometric_decision;

CREATE TABLE IF NOT EXISTS public.morphometric_decision
(
    sample_no integer NOT NULL,
    ffamily_name character varying(20) COLLATE pg_catalog."default" NOT NULL,
    bd_score smallint,
    ed_score smallint,
    hl_score smallint,
    pdl_score smallint,
    snl_score smallint,
    pal_score smallint,
    vafl_score smallint,
    PRIMARY KEY (sample_no)
);

DROP TABLE IF EXISTS public.order_decision;

CREATE TABLE IF NOT EXISTS public.order_decision
(
    sample_no integer NOT NULL,
    forder_name character varying(45) COLLATE pg_catalog."default" NOT NULL,
    bd smallint,
    ed smallint,
    hl smallint,
    pdl smallint,
    snl smallint,
    pal smallint,
    vafl smallint,
    dorsal_count smallint,
    anal_count smallint,
    pectoral_count smallint,
    caudal_count smallint,
    vertebrae_count smallint,
    myomeres_count smallint,
    PRIMARY KEY (sample_no)
);

DROP TABLE IF EXISTS public.postflexion_stage;

CREATE TABLE IF NOT EXISTS public.postflexion_stage
(
    ffamily_name character varying(20) COLLATE pg_catalog."default" NOT NULL,
    fgroup_no integer NOT NULL,
    post_flexion_stage character varying(20) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    bd_lowrange numeric(10, 2) DEFAULT NULL::numeric,
    bd_highrange numeric(10, 2) DEFAULT NULL::numeric,
    ed_lowrange numeric(10, 2) DEFAULT NULL::numeric,
    ed_highrange numeric(10, 2) DEFAULT NULL::numeric,
    hl_lowrange numeric(10, 2) DEFAULT NULL::numeric,
    hl_highrange numeric(10, 2) DEFAULT NULL::numeric,
    pdl_lowrange numeric(10, 2) DEFAULT NULL::numeric,
    pdl_highrange numeric(10, 2) DEFAULT NULL::numeric,
    snl_lowrange numeric(10, 2) DEFAULT NULL::numeric,
    snl_highrange numeric(10, 2) DEFAULT NULL::numeric,
    pal_lowrange numeric(10, 2) DEFAULT NULL::numeric,
    pal_highrange numeric(10, 2) DEFAULT NULL::numeric,
    vafl_lowrange numeric(10, 2) DEFAULT NULL::numeric,
    vafl_highrange numeric(10, 2) DEFAULT NULL::numeric,
    PRIMARY KEY (ffamily_name)
);

DROP TABLE IF EXISTS public.preflexion_stage;

CREATE TABLE IF NOT EXISTS public.preflexion_stage
(
    ffamily_name character varying(20) COLLATE pg_catalog."default" NOT NULL,
    fgroup_no integer NOT NULL,
    pre_flexion_stage character varying(20) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    bd_lowrange numeric(10, 2) DEFAULT NULL::numeric,
    bd_highrange numeric(10, 2) DEFAULT NULL::numeric,
    ed_lowrange numeric(10, 2) DEFAULT NULL::numeric,
    ed_highrange numeric(10, 2) DEFAULT NULL::numeric,
    hl_lowrange numeric(10, 2) DEFAULT NULL::numeric,
    hl_highrange numeric(10, 2) DEFAULT NULL::numeric,
    pdl_lowrange numeric(10, 2) DEFAULT NULL::numeric,
    pdl_highrange numeric(10, 2) DEFAULT NULL::numeric,
    snl_lowrange numeric(10, 2) DEFAULT NULL::numeric,
    snl_highrange numeric(10, 2) DEFAULT NULL::numeric,
    pal_lowrange numeric(10, 2) DEFAULT NULL::numeric,
    pal_highrange numeric(10, 2) DEFAULT NULL::numeric,
    vafl_lowrange numeric(10, 2) DEFAULT NULL::numeric,
    vafl_highrange numeric(10, 2) DEFAULT NULL::numeric,
    PRIMARY KEY (ffamily_name)
);

DROP TABLE IF EXISTS public.sample;

CREATE TABLE IF NOT EXISTS public.sample
(
    sample_no integer NOT NULL,
    bl numeric(10, 2) DEFAULT NULL::numeric,
    pdl numeric(10, 2) DEFAULT NULL::numeric,
    hl numeric(10, 2) DEFAULT NULL::numeric,
    snl numeric(10, 2) DEFAULT NULL::numeric,
    ed numeric(10, 2) DEFAULT NULL::numeric,
    bd numeric(10, 2) DEFAULT NULL::numeric,
    pal numeric(10, 2) DEFAULT NULL::numeric,
    vafl numeric(10, 2) DEFAULT NULL::numeric,
    dorsal_count integer,
    anal_count integer,
    pectoral_count integer,
    pelvic_count integer,
    caudal_count integer,
    vertebrae_count integer,
    myomeres_count integer,
    PRIMARY KEY (sample_no)
);

DROP TABLE IF EXISTS public.sample_master;

CREATE TABLE IF NOT EXISTS public.sample_master
(
    sample_no integer NOT NULL,
    assessor_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    date_collected date NOT NULL,
    date_measured date NOT NULL,
    location_code character varying(10) COLLATE pg_catalog."default" NOT NULL,
    plankton_net_type character varying(20) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    bl numeric(10, 2) DEFAULT NULL::numeric,
    pdl numeric(10, 2) DEFAULT NULL::numeric,
    hl numeric(10, 2) DEFAULT NULL::numeric,
    snl numeric(10, 2) DEFAULT NULL::numeric,
    ed numeric(10, 2) DEFAULT NULL::numeric,
    bd numeric(10, 2) DEFAULT NULL::numeric,
    pal numeric(10, 2) DEFAULT NULL::numeric,
    vafl numeric(10, 2) DEFAULT NULL::numeric,
    dorsal_count integer,
    anal_count integer,
    pectoral_count integer,
    pelvic_count integer,
    caudal_count integer,
    vertebrae_count integer,
    myomeres_count integer,
    PRIMARY KEY (sample_no)
);

DROP TABLE IF EXISTS public.shape_characteristic;

CREATE TABLE IF NOT EXISTS public.shape_characteristic
(
    result_id integer NOT NULL,
    sample_no integer NOT NULL,
    bd_characteristic character varying(20) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    fgroup_no integer,
    PRIMARY KEY (result_id)
);

ALTER TABLE IF EXISTS public.classification_result
    ADD CONSTRAINT sample_no_fk4 FOREIGN KEY (sample_no)
    REFERENCES public.sample_master (sample_no) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.fish_ratio
    ADD CONSTRAINT sample_no_fk3 FOREIGN KEY (sample_no)
    REFERENCES public.sample_master (sample_no) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.genus_decision
    ADD CONSTRAINT sample_no_fk6 FOREIGN KEY (sample_no)
    REFERENCES public.sample_master (sample_no) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.genus_decision
    ADD CONSTRAINT fgenus_name_fk1 FOREIGN KEY (fgenus_name)
    REFERENCES public."genus (meristic character)" (fgenus_name) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.group_decision
    ADD CONSTRAINT sample_no_fk5 FOREIGN KEY (sample_no)
    REFERENCES public.sample_master (sample_no) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.group_decision
    ADD CONSTRAINT fgroup_no_fk1 FOREIGN KEY (fgroup_no)
    REFERENCES public.fish_group (fgroup_no) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.morphometric_decision
    ADD CONSTRAINT ffamily_name_fk1 FOREIGN KEY (ffamily_name)
    REFERENCES public.postflexion_stage (ffamily_name) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.morphometric_decision
    ADD CONSTRAINT ffamily_name_fk2 FOREIGN KEY (ffamily_name)
    REFERENCES public.preflexion_stage (ffamily_name) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.morphometric_decision
    ADD CONSTRAINT ffamily_name_fk3 FOREIGN KEY (ffamily_name)
    REFERENCES public.flexion_stage (ffamily_name) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.morphometric_decision
    ADD CONSTRAINT sample_no_fk8 FOREIGN KEY (sample_no)
    REFERENCES public.sample_master (sample_no) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.order_decision
    ADD CONSTRAINT sample_no_fk7 FOREIGN KEY (sample_no)
    REFERENCES public.sample_master (sample_no) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.order_decision
    ADD CONSTRAINT forder_name_fk1 FOREIGN KEY (forder_name)
    REFERENCES public."fish_order (meristic character)" (forder_name) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.sample
    ADD CONSTRAINT sample_no_fk2 FOREIGN KEY (sample_no)
    REFERENCES public.sample_master (sample_no) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;


ALTER TABLE IF EXISTS public.shape_characteristic
    ADD CONSTRAINT sample_no_fk1 FOREIGN KEY (sample_no)
    REFERENCES public.sample_master (sample_no) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT
    NOT VALID;

END;